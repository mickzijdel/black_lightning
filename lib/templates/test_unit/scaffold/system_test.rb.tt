require "application_system_test_case"
<%- url_base ='admin_'+ plural_table_name 
<% module_namespacing do -%>
class <%= class_name.pluralize %>Test < ApplicationSystemTestCase
  setup do
    @<%= singular_table_name %> = <%= fixture_name %>(:one)
    login_as users(:admin)
  end

  test "visiting the index" do
    visit <%= url_base %>_url
    assert_selector "h1", text: "<%= human_name.pluralize %>"

    assert_text "REPLACE THIS WITH THE NAME OF A FIXTURE ITEM"
  end

  test "should create <%= human_name %>" do
    visit <%= url_base %>_url
    click_on "New <%= human_name %>"

    <%- attributes_hash.each do |attr, value| -%>
    <%- if boolean?(attr) -%>
    check "<%= attr.humanize %>" if <%= value %>
    <%- else -%>
    fill_in "<%= attr.humanize %>", with: <%= value %>
    <%- end -%>
    <%- end -%>
    click_on "Create <%= human_name %>"

    assert_text 'The <%= human_name %> was successfully created'
  end

  test "should update <%= human_name %>" do
    visit <%= url_base %>_url(@<%= singular_table_name %>)
    click_on "Edit this <%= human_name.downcase %>", match: :prefer_exact

    <%- attributes_hash.each do |attr, value| -%>
    <%- if boolean?(attr) -%>
    check "<%= attr.humanize %>" if <%= value %>
    <%- else -%>
    fill_in "<%= attr.humanize %>", with: <%= value %>
    <%- end -%>
    <%- end -%>
    click_on "Update <%= human_name %>"

    assert_text "The <%= human_name %> was successfully updated."
  end

  test "should destroy <%= human_name %>" do
    visit <%= url_base %>_url(@<%= singular_table_name %>)
    click_on "Destroy this <%= human_name.downcase %>", match: :first

    assert_text "The <%= human_name %> has been successfully destroyed."
  end
end
<% end -%>